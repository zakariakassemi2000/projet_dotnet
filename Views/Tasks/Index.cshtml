@model IEnumerable<TodoTask>
<center>
    <h1 class="mb-4 text-primary fw-bold">Gestionnaire de tâches</h1>
    <p>
        <a asp-action="Create" class="btn btn-primary">📝 Créer une nouvelle tâche</a>
    </p>

  
    <div class="task-container">
        @foreach (var item in Model) {
        <div class="task-card @(item.IsCompleted ? "completed" : "")">
            <h3>@item.Title</h3>
            <p>@item.Description</p>
            <div class="task-info">
                <p>Créée le: @item.CreatedAt.ToString("dd/MM/yyyy")</p>
                @if (item.DueDate.HasValue)
                {
                <p>Échéance: @item.DueDate.Value.ToString("dd/MM/yyyy")</p>
                }
            </div>
            <div class="task-actions">
                <form asp-action="ToggleComplete" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@item.Id" />
                    <button type="submit" class="btn @(item.IsCompleted ? "btn-outline-success" : "btn-success")">
                        @(item.IsCompleted ? "Marquer comme non terminée" : "Marquer comme terminée")
                    </button>
                </form>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Modifier</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Supprimer</a>
            </div>
        </div>
    }
      

    </div>
    @{
 ViewData["Title"] = "Calendrier des tâches";
    }


    <partial name="_Calendar" model="Model" />

    @section Scripts {
        <script src="~/js/calendar.js"></script>
        <script>
     document.addEventListener('DOMContentLoaded', function() {
         // Convertir les dates au format JSON et initialiser le calendrier
         const tasks = @Html.Raw(Json.Serialize(Model.Select(t => new {
             id = t.Id,
             title = t.Title,
             dueDate = t.DueDate
         })));
         initializeTasks(tasks);
     });
        </script>
    }

    <style>
        body{
            background-color:powderblue;
        }
        .task-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .task-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            background-color: #f9f9f9;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .task-card.completed {
                background-color: #e8f5e9;
                border-color: #a5d6a7;
            }

                .task-card.completed h3 {
                    text-decoration: line-through;
                    color: #4caf50;
                }

        .task-actions {
            margin-top: 15px;
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .task-info {
            font-size: 0.9em;
            color: #666;
        }
    </style>
